
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.
/*@mixin mat-body-color($config-or-theme) {
  $config: mat-get-color-config($config-or-theme);
  $primary: map-get($config,accent);
  $accent: map-get($config,primary);



.mat-body-color {
  background-color: mat-color($config);
}
}*/
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
//$nodebucket-primary: mat-palette($mat-indigo);
//$nodebucket-accent: mat-palette($mat-pink, A200, A100, A400);
$nodebucket-primary: mat-palette($mat-teal, 700, 100, 50);
$nodebucket-accent: mat-palette($mat-teal, 50);


// The warn palette is optional (defaults to red).
$nodebucket-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
//$nodebucket-theme: mat-light-theme((
//$nodebucket-theme: mat-nodebucket-theme((
  $nodebucket-theme: mat-nodebucket-theme(
  //color: (
    /*primary: $nodebucket-primary,
    accent: $nodebucket-accent,

    warn: $nodebucket-warn,*/

    $nodebucket-primary,
    $nodebucket-accent,

    $nodebucket-warn,
  //)

//)

);



// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($nodebucket-theme);


